Release Notes
=============


Version 0.8.0
_____________
- Config Manager Plugin: added support to access current process configuration with special hostname "in-process"
- Apps Visualizer plugin:
  - Now can (and should) run separately from the apps/servers that is monitoring
  - Supports connection to remote hosts running config-manager plugin
  - Added list of hosts and status (ALIVE if reachable, ERROR if not)
  - Filter config and live activity by host/group of hosts by name
  - Automatic refresh servers/hosts status
  - Automatic refresh list of active apps
  - Automatic refresh graph on configuration or hosts availability changes


Version 0.7.3
_____________
- Including type information in PIP packages for `hopeit.engine` and plugins.


Version 0.7.2
_____________
- Engine setup: pinned dependencies version when specified in requirements.txt, fallback to requirements.lock when not pinned in txt.
- Apps Visualizer plugin setup: added py.typed marker


Version 0.7.1
_____________
- Config Manager Plugin: Moved cluster_apps_config logic to client that can be used from other apps or plugins.


Version 0.7.0
_____________
- Config Manager Plugin: allows remote access to runtime configuration for `hopeit.engine` servers and clusters


Version 0.6.0
_____________
- Apps Visualizer plugin: supports now live apps activity visualization when used in combination with `log-streamer`
- Apps Visualizer plugin: improved visualization rendering, filters and options.


Version 0.5.0
_____________
- New plugin: `log-streamer` read logs generated by hopeit.engine apps and publish entries to a stream enabling downstream usage like monitoring, dumping log data and analytics.


Version 0.4.3
_____________
- FIX: Missing template on app-visualizer wheel


Version 0.4.2
_____________
- FIX: `date` and `datetime` types are handled according to OpenAPI specs in query string parameters. This is not a breaking change but consider checking that for existing date/datetime query args value format will be validated at request time starting this version.


Version 0.4.1
_____________
- FIX: Missing template on app-visualizer


Version 0.4.0
_____________
- Streams: 
  - Added support for multiple `queues` in `read_stream` and `write_stream` configuration, allowing to produce and consume events in parallel from different sources. hopeit.engine automatically manages independent streams for each queue and ensures a message read from a queue is propagated downstream using the same queue.

- Web: 
  - Support for custom response `content-type` in `PostProcessHook`, i.e. to return `text/plain` or `text/html` for specific applications, instead of default `application/json`.

- Open API:
  - Fixed "Authorization required" with openapi generated entry when endpoint is marked as "Unsecured"

- Plugins: 
  - New plugin for visualizing running configuration (events & streams): `ops/apps-visualizer` plugin.

- BREAKING CHANGES:
  - When an app event is configured with a custom `route` entry to be used instead of app and event name. If it starts with a slash ('/'), route namespace prefix `/api` will be ignored. This can be used to map events to the root endpoint `/` namespace. To ensure default namespace is used, remove starting slash (`/`) from route names.


Version 0.3.0
_____________
- Moved `hopeit.toolkit.storage.redis` to `hopeit.redis-storage` plugin.
- Moved RedisStreamManager to its own plugin. 
- Moved `hopeit.toolkit.storage.fs` to `hopeit.fs-storage` plugin.
- Added test build for Python 3.9

- FIXES: 
  - Removed aiohttp dependency for hopeit.app.context module, in order to allow engine usage on applications that do not require web server module.

- BREAKING CHANGES:
  - By default `stream-manager` is not configured. To enable Redis Streams in server: 1) Install using `pip install hopeit.engine[redis-streams]`, 2) Add `stream_manager=hopeit.redis_streams.RedisStreamManager` to streams section in server config file.
  - Redis Storage toolkit (now a plugin) needs to be installed using `pip install hopeit.redis-storage`
  - Removed `hopeit.dataobjects.validation` and `hopeit.toolkit.validators` modules
  - make simple-example app to match Major. Minor version number from engine. This is only breaking changes for users of this app config file.
  - make simple-benchmark app to match Major. Minor version number from engine. This is only breaking changes for users of this app config file.
  - make basic-auth plugin to match Major. Minor version number from engine. This is only breaking changes for users of this plugin config file.
  

Version 0.2.3
_____________
- Remove unnecessary decode when parsing payload on web module 
- Split generic Stream Manager from Redis specifics, on preparation to support different stream managers
- Made `stream-manager` a configuration option (defaults to same RedisStreamManager used before)


Version 0.2.0
_____________
- MULTIPART uploads http endpoints support: post form-data with file attachments in request (with Json response)
- Support for `__preprocess__` web requests in GET, POST and MULTIPART endpoints
- Ability to define `content-type` for responses with binary files in Open API specification
- DEPRECATION: `title` parameter removed in `app.api.event_api(...)` in favor of `summary` and `description`


Version 0.1.5
_____________
- Automatic publishing to PyPi
- Open API: added summary and description parameters to Open API specification. Deprecation warning for title param.
- FIX: Improved dependency handling
- FIX: fix object listing in FileStorage toolkit


Version 0.1.0
_____________

Initial __hopeit.engine__ version support for:
- Enables development of microservices in Python (3.7+)
- Provides aiohttp web server for API endpoints.
- Open API schema validation and docs site.
- Modular and testable application design: each microservice is an app composed of independent events
- Logging of event invocations and results.
- Metrics: event durations, events starts, success, failures. Stream processing rates.
- Tracking/tracing: keep track of request ids among applications and multiple events execution.
- Event publishing and consuming to Redis Streams.
- Engine core support for functional Events with Steps
- Multiple microservices definition as Apps
- GET, POST http endpoints with JSON responses
- STREAM events to asynchroously consume and process messages
- SERVICE events for continuously running processes
- read_stream / write_stream support for Redis streams
- OpenAPI specification support for HTTP endpoints
- Dataobjects with Json Schema validation
- JSON configuration files with Json Schema validation
- Collector steps pattern support for concurrent execution of steps using asyncio
- hopeit_server command line interface
- hopeit_openapi command line interface
- Helps to create elegant and well structure code using your preferred IDE.
- Data Science / Machine Learning friendly: applications can be developed and tested using Jupyter Notebooks.
- Testing: provides utilities to test from Notebooks or Python testing frameworks.
