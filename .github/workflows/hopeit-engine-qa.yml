# This workflow will install hopeit.engine dev Python dependencies, run tests in multiple version of Python

name: hopeit.engine CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    - dev

jobs:
  ci-checks:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13", "3.12"] #, "3.11", "3.10", "3.10"]
        module: ["engine", "plugins", "apps"]
      max-parallel: 6

    steps:
    - uses: actions/checkout@v4
    
    - name: install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: make ci-deps
      run: PYTHONVERSION=${{ matrix.python-version }} make ci-deps

    - name: make lint
      run: |
        make lint-${{ matrix.module }}
#  & PID_CHECK_ENGINE=$!
# make lint-plugins & PID_CHECK_PLUGINS=$!
# make lint-apps & PID_CHECK_APPS=$!
# wait $PID_CHECK_ENGINE || CHECK_ENGINE_STATUS=$?
# wait $PID_CHECK_PLUGINS || CHECK_PLUGINS_STATUS=$?
# wait $PID_CHECK_APPS || CHECK_APPS_STATUS=$?
# echo "CHECK_ENGINE_STATUS: $CHECK_ENGINE_STATUS"
# echo "CHECK_PLUGINS_STATUS: $CHECK_PLUGINS_STATUS"
# echo "CHECK_APPS_STATUS: $CHECK_APPS_STATUS"
# if [ -z "$CHECK_ENGINE_STATUS" ] && [ -z "$CHECK_PLUGINS_STATUS" ] && [ -z "$CHECK_APPS_STATUS" ]; then
#   exit 0
# else
#   exit 1
# fi

    - name: make test
      run: |
        make test-${{ matrix.module }}
# & PID_TEST_ENGINE=$!
# make test-plugins & PID_TEST_PLUGINS=$!
# make test-apps & PID_TEST_APPS=$!
# wait $PID_TEST_ENGINE || TEST_ENGINE_STATUS=$?
# wait $PID_TEST_PLUGINS || TEST_PLUGINS_STATUS=$?
# wait $PID_TEST_APPS || TEST_APPS_STATUS=$?
# echo "TEST_ENGINE_STATUS: $TEST_ENGINE_STATUS"
# echo "TEST_PLUGINS_STATUS: $TEST_PLUGINS_STATUS"
# echo "TEST_APPS_STATUS: $TEST_APPS_STATUS"
# if [ -z "$TEST_ENGINE_STATUS"] && [ -z "$TEST_PLUGINS_STATUS"] && [ -z "$TEST_APPS_STATUS"]; then
#   exit 0
# else
#   exit 1
# fi
