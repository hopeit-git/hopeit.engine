{
  "openapi": "3.0.3",
  "info": {
    "version": "0.24",
    "title": "Client Example",
    "description": "Client Example"
  },
  "paths": {
    "/api/config-manager/0x24/runtime-apps-config": {
      "get": {
        "summary": "Config Manager: Runtime Apps Config",
        "description": "Returns the runtime config for the Apps running on this server",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": false,
            "description": "URL used to reach this server, informative",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand_events",
            "in": "query",
            "required": false,
            "description": "Retrieve expanded effective events from event steps",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config info about running apps in current process",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeApps"
                }
              }
            }
          }
        },
        "tags": [
          "config_manager.0x24"
        ]
      }
    },
    "/api/config-manager/0x24/cluster-apps-config": {
      "get": {
        "summary": "Config Manager: Cluster Apps Config",
        "description": "Handle remote access to runtime configuration for a group of hosts",
        "parameters": [
          {
            "name": "hosts",
            "in": "query",
            "required": true,
            "description": "Comma-separated list of http://host:port strings",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand_events",
            "in": "query",
            "required": true,
            "description": "Extract effective events from event steps",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Combined config info about running apps in provided list of hosts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeApps"
                }
              }
            }
          }
        },
        "tags": [
          "config_manager.0x24"
        ]
      }
    },
    "/api/client-example/0x24/call-unsecured": {
      "get": {
        "summary": "Client Example: Call Unsecured",
        "description": "List all available Something objects connecting to simple-example app",
        "parameters": [
          {
            "name": "wildcard",
            "in": "query",
            "required": false,
            "description": "Wildcard to filter objects by name prefixed by partition folder in format YYYY/MM/DD/HH/*",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "X-Track-Caller",
            "in": "header",
            "required": true,
            "description": "Track information: track.caller",
            "schema": {
              "type": "string",
              "default": "test.caller"
            }
          },
          {
            "name": "X-Track-Session-Id",
            "in": "header",
            "required": true,
            "description": "Track information: track.session_id",
            "schema": {
              "type": "string",
              "default": "test.session_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Something objects returned by simple-example call",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Something"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "client_example.0x24"
        ]
      }
    },
    "/api/client-example/0x24/count-and-save": {
      "get": {
        "summary": "Client Example: Count Objects and Save new one",
        "description": "Count all available Something objects connecting to simple-example app",
        "parameters": [
          {
            "name": "wildcard",
            "in": "query",
            "required": false,
            "description": "Wildcard to filter objects by name prefixed by partition folder in format YYYY/MM/DD/HH/*",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "X-Track-Caller",
            "in": "header",
            "required": true,
            "description": "Track information: track.caller",
            "schema": {
              "type": "string",
              "default": "test.caller"
            }
          },
          {
            "name": "X-Track-Session-Id",
            "in": "header",
            "required": true,
            "description": "Track information: track.session_id",
            "schema": {
              "type": "string",
              "default": "test.session_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count of Something objects returned by simple-example call",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountAndSaveResult"
                }
              }
            }
          }
        },
        "tags": [
          "client_example.0x24"
        ],
        "security": [
          {
            "auth.basic": []
          }
        ]
      }
    },
    "/api/client-example/0x24/handle-responses": {
      "get": {
        "summary": "Client Example: Handle Responses",
        "description": "Non default responses and UnhandledResponse exception\n\nTo manage different types of responses from the same endpoint we can use the `responses` parameter where we list the\nhttp response status codes expected and the corresponding data type for each one. In this example `app_call` expect\nand handle, 200 and 404 responses.\n\nAlso in the code you can see how to handle an expection of type `UnhandledResponse` and log as warining.",
        "parameters": [
          {
            "name": "item_id",
            "in": "query",
            "required": true,
            "description": "Item Id to read",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "partition_key",
            "in": "query",
            "required": true,
            "description": "Partition folder in `YYYY/MM/DD/HH` format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "X-Track-Caller",
            "in": "header",
            "required": true,
            "description": "Track information: track.caller",
            "schema": {
              "type": "string",
              "default": "test.caller"
            }
          },
          {
            "name": "X-Track-Session-Id",
            "in": "header",
            "required": true,
            "description": "Track information: track.session_id",
            "schema": {
              "type": "string",
              "default": "test.session_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Show the response of the call",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "handle_responses"
                  ],
                  "properties": {
                    "handle_responses": {
                      "type": "string"
                    }
                  },
                  "description": "handle_responses string payload"
                }
              }
            }
          }
        },
        "tags": [
          "client_example.0x24"
        ],
        "security": [
          {
            "auth.basic": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "EventConnection": {
        "description": "EventConnection: describes dependencies on this event when calling\nevent on apps configured in `app_connections` sections. Only events\nspecified are allowed to be invoked using `hopeit.client`\n\n:field: app_connection, str: key of app entry used in app_connections sections\n:field: event, str: target event_name to be called\n:filed: type, EventConnectionType: a valid event connection type, i.e. GET or POST\n:field: route, optional str: custom route in case event is not attached to default `app/version/event`",
        "properties": {
          "app_connection": {
            "title": "App Connection",
            "type": "string"
          },
          "event": {
            "title": "Event",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EventConnectionType"
          }
        },
        "required": [
          "app_connection",
          "event",
          "type"
        ],
        "title": "EventConnection",
        "type": "object"
      },
      "EventConnectionType": {
        "description": "Event connection type",
        "enum": [
          "GET",
          "POST"
        ],
        "title": "EventConnectionType",
        "type": "string"
      },
      "Status": {
        "description": "Status change",
        "properties": {
          "ts": {
            "format": "date-time",
            "title": "Ts",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/StatusType"
          }
        },
        "required": [
          "ts",
          "type"
        ],
        "title": "Status",
        "type": "object"
      },
      "StatusType": {
        "enum": [
          "NEW",
          "LOADED",
          "SUBMITTED",
          "PROCESSED"
        ],
        "title": "StatusType",
        "type": "string"
      },
      "CountAndSaveResult": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "save_path": {
            "title": "Save Path",
            "type": "string"
          }
        },
        "required": [
          "count",
          "save_path"
        ],
        "title": "CountAndSaveResult",
        "type": "object"
      }
    },
    "securitySchemes": {
      "auth.basic": {
        "type": "http",
        "scheme": "basic"
      },
      "auth.bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": []
}