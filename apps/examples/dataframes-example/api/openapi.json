{
  "openapi": "3.0.3",
  "info": {
    "version": "0.25",
    "title": "Dataframes Example",
    "description": "Dataframes Example"
  },
  "paths": {
    "/api/basic-auth/0x25/decode": {
      "get": {
        "summary": "Basic Auth: Decode",
        "description": "Returns decoded auth info",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Information extracted from token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextUserInfo"
                }
              }
            }
          }
        },
        "tags": [
          "basic_auth.0x25"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/config-manager/0x25/runtime-apps-config": {
      "get": {
        "summary": "Config Manager: Runtime Apps Config",
        "description": "Returns the runtime config for the Apps running on this server",
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": false,
            "description": "URL used to reach this server, informative",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand_events",
            "in": "query",
            "required": false,
            "description": "Retrieve expanded effective events from event steps",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Config info about running apps in current process",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeApps"
                }
              }
            }
          }
        },
        "tags": [
          "config_manager.0x25"
        ]
      }
    },
    "/api/config-manager/0x25/cluster-apps-config": {
      "get": {
        "summary": "Config Manager: Cluster Apps Config",
        "description": "Handle remote access to runtime configuration for a group of hosts",
        "parameters": [
          {
            "name": "hosts",
            "in": "query",
            "required": true,
            "description": "Comma-separated list of http://host:port strings",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand_events",
            "in": "query",
            "required": true,
            "description": "Extract effective events from event steps",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Combined config info about running apps in provided list of hosts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuntimeApps"
                }
              }
            }
          }
        },
        "tags": [
          "config_manager.0x25"
        ]
      }
    },
    "/api/dataframes-example/0x25/prepare-data": {
      "get": {
        "summary": "Prepare Data",
        "description": "Prepare Data",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InputData",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InputData"
                }
              }
            }
          }
        },
        "tags": [
          "dataframes_example.0x25"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/dataframes-example/0x25/train-model": {
      "post": {
        "summary": "Training Pipeline",
        "description": "Training Pipeline",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Serialized dataframeobject with iris dataset",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Iris",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Iris"
                }
              }
            }
          }
        },
        "tags": [
          "dataframes_example.0x25"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/dataframes-example/0x25/predict": {
      "post": {
        "summary": "Predict",
        "description": "Predict",
        "parameters": [
          {
            "name": "experiment_id",
            "in": "query",
            "required": true,
            "description": "experiment_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "requestBody": {
          "description": "Batch of prediction requests",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IrisBatchPredictionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IrisFeatures"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dataframes_example.0x25"
        ],
        "security": [
          {
            "auth.bearer": []
          }
        ]
      }
    },
    "/api/dataframes-example/0x25/basic-auth/0x25/login": {
      "get": {
        "summary": "Basic Auth: Login",
        "description": "Handles users login using basic-auth\nand generate access tokens for external services invoking apps\nplugged in with basic-auth plugin.",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication information to be used for further API calls",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthInfo"
                }
              }
            }
          },
          "401": {
            "description": "Login failed, invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        },
        "tags": [
          "dataframes_example.0x25"
        ],
        "security": [
          {
            "auth.basic": []
          }
        ]
      }
    },
    "/api/dataframes-example/0x25/basic-auth/0x25/refresh": {
      "get": {
        "summary": "Basic Auth: Refresh",
        "description": "This event can be used for obtain new access token and update refresh token (http cookie),\nwith no need to re-login the user if there is a valid refresh token active.",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refreshed authentication information to be used for further API calls",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthInfo"
                }
              }
            }
          },
          "401": {
            "description": "Login failed, invalid credentials. An http-cookie is expected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        },
        "tags": [
          "dataframes_example.0x25"
        ],
        "security": [
          {
            "dataframes_example.0x25.refresh": []
          }
        ]
      }
    },
    "/api/dataframes-example/0x25/basic-auth/0x25/logout": {
      "get": {
        "summary": "Basic Auth: Logout",
        "description": "Invalidates previous refresh cookies.",
        "parameters": [
          {
            "name": "X-Track-Request-Id",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Track-Request-Ts",
            "in": "header",
            "required": false,
            "description": "Track information: Request-Ts",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out message.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "logout"
                  ],
                  "properties": {
                    "logout": {
                      "type": "string"
                    }
                  },
                  "description": "logout string payload"
                }
              }
            }
          },
          "401": {
            "description": "Login failed, invalid credentials or not logged in.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInfo"
                }
              }
            }
          }
        },
        "tags": [
          "dataframes_example.0x25"
        ],
        "security": [
          {
            "dataframes_example.0x25.refresh": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorInfo": {
        "description": "Error information to be returned in failed responses",
        "properties": {
          "msg": {
            "title": "Msg",
            "type": "string"
          },
          "tb": {
            "items": {
              "type": "string"
            },
            "title": "Tb",
            "type": "array"
          }
        },
        "required": [
          "msg",
          "tb"
        ],
        "title": "ErrorInfo",
        "type": "object"
      },
      "ContextUserInfo": {
        "description": "User info that will be available in context during events execution",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "user": {
            "title": "User",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          }
        },
        "required": [
          "id",
          "user",
          "email"
        ],
        "title": "ContextUserInfo",
        "type": "object"
      },
      "AuthInfo": {
        "description": "Minimal auth info that should be returned outside this app",
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "token_type": {
            "title": "Token Type",
            "type": "string"
          },
          "renew": {
            "title": "Renew",
            "type": "integer"
          }
        },
        "required": [
          "access_token",
          "token_type",
          "renew"
        ],
        "title": "AuthInfo",
        "type": "object"
      },
      "EventConnection": {
        "description": "EventConnection: describes dependencies on this event when calling\nevent on apps configured in `app_connections` sections. Only events\nspecified are allowed to be invoked using `hopeit.client`\n\n:field: app_connection, str: key of app entry used in app_connections sections\n:field: event, str: target event_name to be called\n:filed: type, EventConnectionType: a valid event connection type, i.e. GET or POST\n:field: route, optional str: custom route in case event is not attached to default `app/version/event`",
        "properties": {
          "app_connection": {
            "title": "App Connection",
            "type": "string"
          },
          "event": {
            "title": "Event",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EventConnectionType"
          }
        },
        "required": [
          "app_connection",
          "event",
          "type"
        ],
        "title": "EventConnection",
        "type": "object"
      },
      "EventConnectionType": {
        "description": "Event connection type",
        "enum": [
          "GET",
          "POST"
        ],
        "title": "EventConnectionType",
        "type": "string"
      },
      "Iris": {
        "properties": {
          "sepal_length": {
            "metadata": {
              "source_field_name": "sepal length (cm)"
            },
            "title": "Sepal Length",
            "type": "number"
          },
          "sepal_width": {
            "metadata": {
              "source_field_name": "sepal width (cm)"
            },
            "title": "Sepal Width",
            "type": "number"
          },
          "petal_length": {
            "metadata": {
              "source_field_name": "petal length (cm)"
            },
            "title": "Petal Length",
            "type": "number"
          },
          "petal_width": {
            "metadata": {
              "source_field_name": "petal width (cm)"
            },
            "title": "Petal Width",
            "type": "number"
          },
          "variety": {
            "metadata": {
              "source_field_name": "target"
            },
            "title": "Variety",
            "type": "integer"
          }
        },
        "required": [
          "sepal_length",
          "sepal_width",
          "petal_length",
          "petal_width",
          "variety"
        ],
        "title": "Iris",
        "type": "object"
      },
      "IrisFeatures": {
        "properties": {
          "sepal_length": {
            "title": "Sepal Length",
            "type": "number"
          },
          "sepal_width": {
            "title": "Sepal Width",
            "type": "number"
          },
          "petal_length": {
            "title": "Petal Length",
            "type": "number"
          },
          "petal_width": {
            "title": "Petal Width",
            "type": "number"
          }
        },
        "required": [
          "sepal_length",
          "sepal_width",
          "petal_length",
          "petal_width"
        ],
        "title": "IrisFeatures",
        "type": "object"
      }
    },
    "securitySchemes": {
      "auth.basic": {
        "type": "http",
        "scheme": "basic"
      },
      "auth.bearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "dataframes_example.0x25.refresh": {
        "type": "apiKey",
        "in": "cookie",
        "name": "dataframes_example.0x25.refresh"
      }
    }
  },
  "security": []
}